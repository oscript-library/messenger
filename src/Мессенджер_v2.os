
///////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль отправки сообщений 
// Для использования доступны тарнспорты, реализация которых находится в каталоге сценариев 
// "Транспорты"
//
// (с) BIA Technologies, LLC	
//
///////////////////////////////////////////////////////////////////////////////////////////////

Перем Транспорты; // подключенные транспорты отправки сообщений

///////////////////////////////////////////////////////////////////////////////////////////////
// Программный интерфейс
///////////////////////////////////////////////////////////////////////////////////////////////

// ДоступныеТранспорты
//	Вовзращает подключенные и доступные для использования транспорты
//
// Параметры:
//
// Возвращаемое значение:
//	Структура - подключенные транспорты. 
//	В качестве ключа выступает имя транспорта, в качестве значения - объект сценария, реализующий 
//	интерфейс
//
Функция ДоступныеТранспорты() Экспорт
	
	Возврат Транспорты;

КонецФункции // ДоступныеТранспорты()

// ОтправитьСообщение
//	Выполняет отправку сообщения выбарнным транспортом
//
// Параметры:
//	ИмяТранспорта	- Строка - Имя транспорта (см ДоступныеТранспорты)
//	Адресат 		- Строка - Адресат сообщения
//	Сообщение 		- Строка - Текст отправляемого сообщения
//	ТемаСообщения	- Строка - Тема сообщения, воспринимается не всеми транспортами
//	ТипСообщения	- Строка - Тип сообщения, воспринимается не всеми транспортами
//
Процедура ОтправитьСообщение(ИмяТранспорта, Адресат, Сообщение, ТемаСообщения = "", ТипСообщения = "") Экспорт
	
	Транспорт = Неопределено;
	Если Не Транспорты.Свойство(ИмяТранспорта, Транспорт) Тогда

		ВызватьИсключение СтрШаблон("Неизвестный транспорт отправки сообщения: %1", ИмяТранспорта);

	КонецЕсли;

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТемаСообщения", ТемаСообщения);
	ДополнительныеПараметры.Вставить("ТипСообщения", ТипСообщения);
	Транспорт.ОтправитьСообщение(Адресат, Сообщение, ДополнительныеПараметры);

КонецПроцедуры // ОтправитьСообщение()

// ИнициализироватьТранспорт
//	Выполняет настройку транспорта для использования
//
// Параметры:
//	ИмяТранспорта			- Строка	- Имя транспорта (см ДоступныеТранспорты)
//	ПараметрыИнициализации	- Структура	- Набор параметров для инициализации транспорта. 
//		Если вызвать метод без этого параметра, то в сообщении будет выведена подсказка
//
Процедура ИнициализироватьТранспорт(ИмяТранспорта, ПараметрыИнициализации = Неопределено) Экспорт

	Транспорт = Неопределено;
	Если Не Транспорты.Свойство(ИмяТранспорта, Транспорт) Тогда

		ВызватьИсключение СтрШаблон("Неизвестный транспорт отправки сообщения: %1", ИмяТранспорта);

	КонецЕсли;

	Транспорт.Инициализация(ПараметрыИнициализации);

КонецПроцедуры // ИнициализироватьТранспорт()

///////////////////////////////////////////////////////////////////////////////////////////////

Процедура ПриСозданииОбъекта(ВывестиИнфо = ЛОЖЬ)

	// Загрузка классов транспортов
	Транспорты = Новый Структура;
	ФайлыТранспортов = НайтиФайлы(ОбъединитьПути(ТекущийСценарий().Каталог, "Транспорты"), "*.os");
	Для Каждого ФайлТранспорта Из ФайлыТранспортов Цикл
		
		Попытка
			
			СценарийТранспорта = ЗагрузитьСценарий(ФайлТранспорта.ПолноеИмя);
			ОписаниеПротокола = СценарийТранспорта.Протокол();
			Если СтрСравнить(ОписаниеПротокола.Имя, "Шаблон") = 0 Тогда
				
				Продолжить;

			КонецЕсли;
			Транспорты.Вставить(ОписаниеПротокола.Имя, СценарийТранспорта);

		Исключение
			
			Сообщить(СтрШаблон("Ошибка загрузки сценария %1: %2", ФайлТранспорта.ПолноеИмя, ОписаниеОшибки()));
			Продолжить;

		КонецПопытки;

	КонецЦикла;

	Если Транспорты.Количество() = 0 Тогда

		ВызватьИсключение "Нет доступных транспортов отправки сообщений"

	КонецЕсли;

	// вывод инфо при необходимости
	Если ВывестиИнфо = ИСТИНА Тогда

		Сообщить("");
		Сообщить("messenger");
		Сообщить("");
		Сообщить("Доступные транспорты:");
		Сообщить("");
		Для Каждого Транспорт Из Транспорты Цикл

			ОписаниеПротокола = Транспорт.Значение.Протокол();
			Сообщить(СтрШаблон("Имя: %1
					|Представление: %2
					|Описание: %3", ОписаниеПротокола.Имя, ОписаниеПротокола.Представление, ОписаниеПротокола.Описание));
			
			Если ОписаниеПротокола.Операторы <> Неопределено И ОписаниеПротокола.Операторы.Количество() Тогда
				
				Сообщить("Возможные операторы:");
				Для Каждого Оператор Из ОписаниеПротокола.Операторы Цикл
					
					Сообщить(СтрШаблон(" - %1", Оператор.Ключ));

				КонецЦикла;

			КонецЕсли;

			Сообщить("");

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры
