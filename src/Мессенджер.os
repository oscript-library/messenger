
///////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль отправки сообщений 
// Доступные варианты
//	- Канал SLACK
//	- SMS
//	- Emal
//
// (с) BIA Technologies, LLC	
//
///////////////////////////////////////////////////////////////////////////////////////////////

Перем АвторизацияSLACK;
Перем АвторизацияSMS;
Перем АвторизацияEmail;

Перем ПараметрыДоступныеОператорыSMS;
Перем ПараметрыДоступныеПротоколы;

///////////////////////////////////////////////////////////////////////////////////////////////

Процедура ОтправитьСообщениеSMS(Адресат, Сообщение) Экспорт
	
	ОтправитьСообщение("sms", Адресат, Сообщение);
	
КонецПроцедуры

Процедура ОтправитьСообщениеSLACK(Адресат, Сообщение, ТипСообщения) Экспорт
	
	ОтправитьСообщение("slack", Адресат, Сообщение,, ТипСообщения);
	
КонецПроцедуры

Процедура ОтправитьСообщениеEmail(Адресат, ТемаСообщения="", Сообщение="") Экспорт
	
	ОтправитьСообщение("email", Адресат, Сообщение, ТемаСообщения);
	
КонецПроцедуры
///////////////////////////////////////////////////////////////////////////////////////////////

Процедура ОтправитьСообщение(Протокол, Адресат, Сообщение, ТемаСообщения = "", ТипСообщения = "") Экспорт
	
	Если Протокол = ДоступныеПротоколы().slack Тогда
		
		ОтправитьСообщениеВКаналSLACK(Адресат, Сообщение, ТипСообщения)
		
	ИначеЕсли Протокол = ДоступныеПротоколы().sms Тогда
		
		ОтправитьСообщениеОператоруSMS(Адресат, Сообщение);
		
	ИначеЕсли Протокол = ДоступныеПротоколы().email Тогда
		
		ОтправитьСообщениеПоEmail(Адресат, ТемаСообщения, Сообщение);
		
	Иначе
		
		ВызватьИсключение "Неизвестный протокол отправки: " + Протокол;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьСообщениеОператоруSMS(Адресат, Знач Сообщение)Экспорт
	
	Если АвторизацияSMS = Неопределено Тогда
		
		ВызватьИсключение "Необходимо выполнить инициализацию транспорта SMS";
		
	КонецЕсли;
	
	URL = АвторизацияSMS.URL;
	ИмяСервера = АвторизацияSMS.ИмяСервера;
	
	ТелоЗапроса = СтрШаблон(АвторизацияSMS.ШаблонТелаЗапроса, 
	АвторизацияSMS.Логин,
	АвторизацияSMS.Пароль,
	Адресат,
	Сообщение,
	АвторизацияSMS.Подпись); 
	
	HTTPЗапрос = Новый HTTPЗапрос(АвторизацияSMS.URL, АвторизацияSMS.Заголовки);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса);
	
	HTTP = Новый HTTPСоединение(ИмяСервера);
	Ответ = HTTP.ОтправитьДляОбработки(HTTPЗапрос);
	
КонецПроцедуры

Процедура ОтправитьСообщениеВКаналSLACK(Канал, ТекстСообщения, ТипСообщения)Экспорт
	
	Если АвторизацияSLACK = Неопределено Тогда
		
		ВызватьИсключение "Необходимо выполнить инициализацию транспорта Slack";
		
	КонецЕсли;
	
	ИмяСервера = "slack.com";
	
	Прокси = Новый ИнтернетПрокси(ИСТИНА);
	
	URL = "api/chat.postMessage?channel=" 
	+ Канал 
	+ "&text=" + СформироватьТекстСообщенияSLACK(ТипСообщения, ТекстСообщения) 
	+ "&as_user=" + АвторизацияSLACK.Логин + "&token=" + АвторизацияSLACK.Ключ;
	
	
	HTTPЗапрос = Новый HTTPЗапрос;
	HTTPЗапрос.АдресРесурса = URL;
	
	HTTP = Новый HTTPСоединение(ИмяСервера,,,, Прокси);
	Ответ = HTTP.Получить(HTTPЗапрос);
	
КонецПроцедуры

Процедура ОтправитьСообщениеПоEmail(Адресат, ТемаСообщения, ТекстСообщения)Экспорт
	
	Если АвторизацияEmail = Неопределено Тогда
		
		ВызватьИсключение "Необходимо выполнить инициализацию Email";
		
	КонецЕсли;
	
	МассивПисьма = Новый Массив;
	МассивПисьма.Добавить("-to:"+Адресат+"");
	
	Если ЗначениеЗаполнено(ТемаСообщения) Тогда
		МассивПисьма.Добавить("-subject:"+ТемаСообщения+"")	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстСообщения) Тогда
		МассивПисьма.Добавить("-body:"+ТекстСообщения+"")	
	КонецЕсли;
	
	
	СтрокаВыполнения = "";
	
	Для Каждого Стр Из АвторизацияEmail.МассивПараметров Цикл
		
		СтрокаВыполнения = СтрокаВыполнения +""""+Стр+""" ";
	КонецЦикла;
	
	Для Каждого Стр Из МассивПисьма Цикл
		СтрокаВыполнения = СтрокаВыполнения +""""+Стр+""" ";
	КонецЦикла;

	Процесс = СоздатьПроцесс(АвторизацияEmail.Команда +" " +СтрокаВыполнения ,ТекущийСценарий().Каталог,Истина);
	
	Процесс.Запустить();
	
	Процесс.ОжидатьЗавершения();
	
	Если Процесс.КодВозврата = 0 Тогда
		Текст = Процесс.ПотокВывода.Прочитать();
		ТекстБазовый = "Сообщение пользователю "+Адресат+" отправлено успешно"+Символы.ПС +Текст;
		Сообщить(ТекстБазовый);
	Иначе
		
		Текст = Процесс.ПотокОшибок.Прочитать();
		Текст = Текст + Процесс.ПотокВывода.Прочитать();
		ТекстБазовый = "Сообщение пользователю "+Адресат+" НЕ отправлено"+Символы.ПС +Текст;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////
// Инициализация
///////////////////////////////////////////////////////////////////////////////////////////////

Процедура ИнициализацияSLACK(Логин, Ключ) Экспорт
	
	АвторизацияSLACK = Новый Структура("Логин, Ключ", Логин, Ключ)
	
КонецПроцедуры

Процедура ИнициализацияSMS(КодОператора, Логин, Пароль, Подпись) Экспорт
	
	Если КодОператора = ДоступныеОператорыSMS().smsbliss Тогда
		
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("Content-Type", "application/json");
		
		АвторизацияSMS = Новый Структура("ШаблонТелаЗапроса, Логин, Пароль, Подпись", ПолучитьШаблонТелаЗапросаSMSBliss(), Логин, Пароль, Подпись);
		АвторизацияSMS.Вставить("ИмяСервера", "json.gate.smsbliss.ru");
		АвторизацияSMS.Вставить("URL", "send");
		АвторизацияSMS.Вставить("Заголовки", Заголовки);
		
	ИначеЕсли КодОператора = ДоступныеОператорыSMS().infobip Тогда
		
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("Content-Type", "application/json");
		
		АвторизацияSMS = Новый Структура("ШаблонТелаЗапроса, Логин, Пароль, Подпись", ПолучитьШаблонТелаЗапросаInfobip(), Логин, Пароль, Подпись);
		АвторизацияSMS.Вставить("ИмяСервера", "api.infobip.com");
		АвторизацияSMS.Вставить("URL", "api/v3/sendsms/json");
		АвторизацияSMS.Вставить("Заголовки", Заголовки);
		
	ИначеЕсли КодОператора = ДоступныеОператорыSMS().sms4b Тогда
		
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("Accept-Encoding", "gzip,deflate");
		Заголовки.Вставить("Content-Type", "text/xml;charset=UTF-8");
		Заголовки.Вставить("SOAPAction", "SMS4B/SendSMS");
		
		АвторизацияSMS = Новый Структура("ШаблонТелаЗапроса, Логин, Пароль, Подпись", ПолучитьШаблонТелаЗапросаSms4b(), Логин, Пароль, Подпись);
		АвторизацияSMS.Вставить("ИмяСервера", "https://sms4b.ru");
		АвторизацияSMS.Вставить("URL", "ws/sms.asmx");
		АвторизацияSMS.Вставить("Заголовки", Заголовки);
		
	Иначе
		
		ВызватьИсключение "Неизвестный код оператора: " + КодОператора;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализацияEmail(АдресСервера, Логин="", Пароль="", Порт=Неопределено, ИспользоватьSSL=Ложь,ОтКого= "OSmail@oscript.ru",Кодировка = "Windows-1251") Экспорт
	
	АвторизацияEmail = Новый Структура;
	МассивПараметровEmail = Новый Массив;
	
	// Исполняемый файл
	Если ИспользоватьSSL Тогда
		АвторизацияEmail.Вставить("Команда",ТекущийСценарий().Каталог+"\bin\CMail_SSL\CMail.exe");		
	Иначе
		АвторизацияEmail.Вставить("Команда",ТекущийСценарий().Каталог+"\bin\CMail\CMail.exe");
	КонецЕсли;
	
	// Подключение к хосту
	ТекстХоста = "";
	
	Если ЗначениеЗаполнено(Логин) Тогда
		ЕстьАвторизацияЛогина = Истина;	
		ТекстХоста = ТекстХоста+Логин+":";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Пароль) Тогда
		ТекстХоста = ТекстХоста+Пароль;	
	КонецЕсли;
	
	Если ЕстьАвторизацияЛогина Тогда
		ТекстХоста = ТекстХоста+"@";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(АдресСервера) Тогда
		ТекстХоста = ТекстХоста+АдресСервера;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Порт) Тогда
		ТекстХоста = ТекстХоста+":"+Порт;	
	КонецЕсли;
	
	МассивПараметровEmail.Добавить("-host:"+ТекстХоста);
	
	МассивПараметровEmail.Добавить("-from:"+ОтКого);
	
	МассивПараметровEmail.Добавить("-charset:"+Кодировка);
	
	АвторизацияEmail.Вставить("МассивПараметров",МассивПараметровEmail);
КонецПроцедуры
///////////////////////////////////////////////////////////////////////////////////////////////

Функция СформироватьТекстСообщенияSLACK(ТипСообщения, ТекстСообщения)
	
	Сообщение = ПолучитьИконкуТипаСообщенияSLACK(ТипСообщения) + " " + КодироватьСтроку(ТекстСообщения, СпособКодированияСтроки.КодировкаURL);
	Возврат Сообщение;
	
КонецФункции 

Функция ПолучитьИконкуТипаСообщенияSLACK(ТипСообщения)
	
	Иконка = ТипСообщения;
	Если ТипСообщения = "Ошибка" Тогда
		
		Иконка = ":no_entry:";
		
	ИначеЕсли ТипСообщения = "Информация" Тогда
		
		Иконка = ":speech_balloon:";                                            
		
	ИначеЕсли ТипСообщения = "Предупреждение" Тогда
		
		Иконка = ":warning:";  
		
	КонецЕсли;
	
	Возврат Иконка;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////

Функция ПолучитьШаблонТелаЗапросаSMSBliss()
	
	Возврат
	"{ 
	|""login"": ""%1"",
	|""password"": ""%2"", 
	|""messages"" :[
	|	{
	|	""clientId"": 0,
	|	""phone"": ""%3"",
	|	""text"": ""%4"",
	|	""sender"": ""%5""
	|	}]
	|}";
	
КонецФункции

Функция ПолучитьШаблонТелаЗапросаInfobip()
	
	Возврат
	"{ 
	|""authentication"": 
	|	{
	|	""username"": ""%1"", 
	|	""password"": ""%2""
	|	}, 
	|""messages"" :[
	|	{
	|	""sender"": ""%5"",
	|	""text"": ""%4"",
	|	""type"": ""longSMS"",
	|	""datacoding"": ""8"",
	|	""recipients"": [{
	|		""gsm"": ""%3""}]
	|	}
	|]
	|}";		
	
КонецФункции

Функция ПолучитьШаблонТелаЗапросаSms4b()
	
	Возврат 
	"<soapenv:Envelope xmlns:soapenv=" + Символ(34) + "http://schemas.xmlsoap.org/soap/envelope/" + Символ(34) + " xmlns:sms="+Символ(34)+"SMS4B"+Символ(34)+">
	|<soapenv:Header/>
	|<soapenv:Body>
	|<sms:SendSMS>
	|<sms:Login>%1</sms:Login>
	|<sms:Password>%2</sms:Password>
	|<sms:Source>%5</sms:Source>
	|<sms:Phone>%3</sms:Phone>
	|<sms:Text>%4</sms:Text>
	|</sms:SendSMS>
	|</soapenv:Body>
	|</soapenv:Envelope>";		
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////

Функция ДоступныеОператорыSMS()Экспорт
	
	Если ПараметрыДоступныеОператорыSMS = Неопределено Тогда
		
		ПараметрыДоступныеОператорыSMS = Новый Структура("smsbliss, infobip, sms4b", "smsbliss", "infobip", "sms4b");
		
	КонецЕсли;
	
	Возврат ПараметрыДоступныеОператорыSMS;
	
КонецФункции

Функция ДоступныеПротоколы()Экспорт
	
	Если ПараметрыДоступныеПротоколы = Неопределено Тогда
		
		ПараметрыДоступныеПротоколы = Новый Структура("slack, sms, email", "slack", "sms", "email");
		
	КонецЕсли;
	
	Возврат ПараметрыДоступныеПротоколы;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////

АвторизацияSLACK = Неопределено;
АвторизацияSMS = Неопределено;
АвторизацияEmail = Неопределено;

ПараметрыДоступныеОператорыSMS = Неопределено;
ПараметрыДоступныеПротоколы = Неопределено;
